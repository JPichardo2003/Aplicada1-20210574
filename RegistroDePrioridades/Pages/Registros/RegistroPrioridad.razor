@page "/RegistroPrioridades";
@using RegistroDePrioridades.BLL;
@using RegistroDePrioridades.Models;

@inject PrioridadesBLL prioridadesBLL;

<EditForm Model="prioridades" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h1>Registro Prioridad</h1>
        </div>
        <div class="card-body">
            <label>ID:</label>
            <div class="input-group">
                <InputNumber @bind-Value="prioridades.PrioridadId" class="custom-input"></InputNumber>
                <button type="button" class="btn btn-primary oi oi-magnifying-glass" @onclick="Buscar"></button>
            </div>
            <div>
                <label>Descripcion</label>
                <InputTextArea @bind-Value="prioridades.Descripcion" class="form-control"></InputTextArea>
                <ValidationMessage For="@(() => prioridades.Descripcion)" />
            </div>
            <div>
                <label>Dias compromiso</label>
                <InputNumber @bind-Value="prioridades.DiasCompromiso" class="form-control"></InputNumber>
                <ValidationMessage For="@(() => prioridades.DiasCompromiso)" />
            </div>
        </div>
        <div class="card-footer">
            <button type="button" class="btn btn-primary" @onclick="Nuevo">Nuevo <i class="oi oi-file" /></button>
            <button type="submit" class="btn btn-success">Guardar <i class="oi oi-document" /></button>
            <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar <i class="oi oi-trash" /></button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int PrioridadId { get; set; }
    public Prioridades prioridades = new Prioridades();

    protected override void OnInitialized()
    {
        if (PrioridadId > 0)
        {
            prioridades.PrioridadId = PrioridadId;
            Buscar();
        }
    }
    public void Buscar()
    {
        var prioridadEncontrada = prioridadesBLL.Buscar(prioridades.PrioridadId);

        if (prioridadEncontrada != null)
            this.prioridades = prioridadEncontrada;
    }
    public bool Validar()
    {
        return !string.IsNullOrEmpty(prioridades.Descripcion) && !(prioridades.DiasCompromiso < 0);
    }
    public void Nuevo()
    {
        this.prioridades = new Prioridades();
    }
    public void Guardar()
    {
        if (Validar() && prioridadesBLL.Guardar(this.prioridades))
        {
            Nuevo();
        }
    }
    public void Eliminar()
    {
        if (Validar() && prioridadesBLL.Eliminar(this.prioridades))
        {
            Nuevo();
        }
    }


}
